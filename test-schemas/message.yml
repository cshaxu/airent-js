entity: Message
model: MessageModel
types:
  - name: MessageModel
    define: "{ [key: string] : any }"
  - name: Chat
    entity: true
  - name: User
    entity: true
  - name: Message
    entity: true
  - name: Attachment
    define: "{ [key: string] : string }"
  - name: SenderType
    enum: '{ USER = "USER", CHATBOT = "CHATBOT" }'
fields:
  - id: 1
    name: id
    type: string
    strategy: primitive
  - id: 2
    name: createdAt
    type: Date
    strategy: primitive
  - id: 3
    name: chatId
    type: string
    strategy: primitive
  - id: 4
    name: userId
    type: string | null
    strategy: primitive
  - id: 5
    name: content
    type: string | null
    strategy: primitive
  - id: 6
    name: attachment
    aliasOf: attachmentJson
    type: Attachment | null
    strategy: primitive
    cast: true
  - id: 7
    name: chat
    type: Chat
    strategy: association
    sourceFields:
      - chatId
    targetFields:
      - id
  - id: 8
    name: user
    type: User | null
    strategy: association
    sourceFields:
      - userId
    targetFields:
      - id
  - id: 9
    name: hasContent
    type: boolean
    strategy: computed_sync
    internal: true
  - id: 10
    name: parentMessageId
    type: string | null
    strategy: primitive
  - id: 11
    name: parentMessage
    type: Message | null
    strategy: association
    sourceFields:
      - parentMessageId
    targetFields:
      - id
