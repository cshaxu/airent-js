<% getGlobalImports().forEach((globalImport) => { -%>
<%- globalImport %>
<% }); -%>
<% types.filter(isEntityType).filter((type) => type.name !== entityName).forEach((type) => { -%>
import { <%= getTypeStrings(type).fieldRequestClass %>, <%= getTypeStrings(type).responseClass %> } from './<%= getTypeStrings(type).typePackage %>';
<% }); -%>
<% types.filter(isExternalType).forEach((type) => { -%>
import { <%= getTypeStrings(type).externalClass %> } from '<%= getTypeStrings(type).externalPackage %>';
<% }); -%>
<% if (types.some(isEnumerableType)) { -%>

/** enums */
<% types.filter(isEnumerableType).forEach((type) => { -%>

<% if (type.deprecated) { -%>
/** @deprecated */
<% } -%>
export enum <%= getTypeStrings(type).typeName %> <%- getTypeStrings(type).typeDefinition %>;
<% }); -%>
<% } -%>
<% if (types.some(isDefinableType)) { -%>

/** structs */
<% types.filter(isDefinableType).forEach((type) => { -%>

<% if (type.deprecated) { -%>
/** @deprecated */
<% } -%>
export type <%= getTypeStrings(type).typeName %> = <%- getTypeStrings(type).typeDefinition %>;
<% }); -%>
<% } -%>

export type <%= getThisEntityStrings().fieldRequestClass %> = {
<% fields.filter(isExternalField).forEach((field) => { -%>
<% if (field.deprecated) { -%>
  /** @deprecated */
<% } -%>
  <%= field.name %>?: <%= getFieldStrings(field).fieldRequestType %>;
<% }); -%>
};

export type <%= getThisEntityStrings().responseClass %> = {
<% fields.filter(isExternalField).forEach((field) => { -%>
<% if (field.deprecated) { -%>
  /** @deprecated */
<% } -%>
  <%= field.name %>?: <%= getFieldStrings(field).fieldResponseType %>;
<% }); -%>
};
