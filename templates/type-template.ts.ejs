<% getGlobalImports().forEach((globalImport) => { -%>
<%- globalImport %>
<% }); -%>
<% getTypeExtraImports().forEach((line) => { -%>
<%- line %>
<% }); -%>
<% schema.types.filter(isEntityType).filter((type) => type.name !== schema.entityName).forEach((type) => { -%>
import { <%= type.strings.fieldRequestClass %>, <%= type.strings.responseClass %> } from './<%= type.strings.typePackage %>';
<% }); -%>
<% schema.types.filter(isExternalType).forEach((type) => { -%>
import { <%= type.strings.externalClass %> } from '<%= type.strings.externalPackage %>';
<% }); -%>
<% if (schema.types.some(isEnumerableType)) { -%>

/** enums */
  <%_ schema.types.filter(isEnumerableType).forEach((type) => { -%>

    <%_ if (type.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
export enum <%= type.name %> <%- type.strings.typeDefinition %>;
  <%_ }); -%>
<% } -%>
<% if (schema.types.some(isDefinableType)) { -%>

/** structs */
  <%_ schema.types.filter(isDefinableType).forEach((type) => { -%>

    <%_ if (type.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
export type <%= type.name %> = <%- type.strings.typeDefinition %>;
  <%_ }); -%>
<% } -%>

<% if (schema.deprecated) { -%>
/** @deprecated */
<% } -%>
export type <%= schema.strings.fieldRequestClass %> = {
<% schema.fields.filter(isExternalField).forEach((field) => { -%>
  <%_ if (field.deprecated) { -%>
  /** @deprecated */
  <%_ } -%>
  <%= field.name %>?: <%= field.strings.fieldRequestType %>;
<% }); -%>
};

<% if (schema.deprecated) { -%>
/** @deprecated */
<% } -%>
export type <%= schema.strings.responseClass %> = {
<% schema.fields.filter(isExternalField).forEach((field) => { -%>
  <%_ if (field.deprecated) { -%>
  /** @deprecated */
  <%_ } -%>
  <%= field.name %>?: <%= field.strings.fieldResponseType %>;
<% }); -%>
};
<% getTypeExtraLines().forEach((line) => { -%>
<%- line %>
<% }); -%>
